var express = require("express");
var path = require("path");
var app = express();
const hbase = require('hbase');
const HBase = require('hbase-rpc-client');
const { createImageData, Canvas } = require('canvas');

client = HBase({
  zookeeperHosts: ['ripoux'],
  zookeeperRoot: ['/hbase']
})

app.use( express.static( "./ejs" ) );
app.set('view engine', 'ejs');

/*app.get('/', function (req, res) {
    res.render(path.resolve('ejs/index.ejs'));
});*/

app.get('/', function (req, result) {
  /*let x = req.params.x;
  let y = req.params.y;
  let z = req.params.z;

  console.log('x : ' + x + ', y : ' + y + ', z : ' + z);

  let rowkey = "X" + x + "Y" + y;
  console.log('aprÃ¨s envoi : ' + rowkey);*/
  
  const data = client.getScanner('ourdb');
  var s = data.toArray((err, res) => {

    let length = 1201;
    //let arraySize = length * length * 4;
      let imgData = createImageData(/*new Uint8ClampedArray(arraySize)*/length, length);
    
    if (err !== null) {
      for (let i = 0; i < imgData.data.length; i+=4) {
        imgData.data[i] = 200;
        imgData.data[i+1] = 255;
        imgData.data[i+2] = 255;
        imgData.data[i+3] = 255;
      }

    } else {
	let str = JSON.stringify(res[0].columns[0].value);

	console.log(res[0].columns);


	/*var heightValues = str.split('[')[1].split(']')[0].split(',');
      
      for(let i=0; i < heightValues.length; i+=4){
        
          let cl = getColor(heightValues[i]);
	  //console.log(imgData.data.length);

        imgData.data[i] = cl.r;
        imgData.data[i+1] = cl.g;
        imgData.data[i+2] = cl.b;
        imgData.data[i+3] = 200;
      }*/
    }
    //let canvas = new Canvas(1201, 1201);
    //let context = canvas.getContext('2d');
    //context.putImageData(imgData, 0, 0);
    //result.setHeader('Content-Type', 'image/png');
    //canvas.pngStream().pipe(result);
  });

});


app.listen(4371);

console.log("Running at Port 4371");

function getColor(value) {
  let result = {
    r: 0,
    g: 0,
    b: 0
  };

  if(value < 256) {result.r = 255; result.g = 255; result.b = 255;}
  if(value < 200) {result.r = 255; result.g = 255; result.b = 102;}
  if(value < 150) {result.r = 153; result.g = 255; result.b = 51;}
  if(value < 100) {result.r = 0; result.g = 153; result.b = 0;}
  if(value < 50) {result.r = 0; result.g = 102; result.b = 0;}
  if(value < 25) {result.r = 0; result.g = 255; result.b = 255;}

  return result;
}
